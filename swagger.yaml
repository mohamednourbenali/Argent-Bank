swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /{userId}/transactions:
    get:
      tags:
        - Transaction module
      summary: Récupérer les détails des transactions du mois en cours
      description: Retourne un tableau d'objets contenant les détails de toutes les transactions associées à un compte spécifique.
      parameters:
        - in: path
          name: userId
          description: L'ID du compte pour lequel récupérer les transactions.
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Liste des transactions récupérée avec succès
          schema:
            type: array
            items: 
              $ref: '#/definitions/Transaction'
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Transactions not found
        "500":
          description: Internal Server Error
  /user/transactions/{transactionId}:
    get:
      tags:
        - Transaction module
      summary: Récupérer les détails d'une transaction spécifique
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
      responses:
        '200':
          description: une seule transaction
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction not found
  /user/transaction/{transactionId}/note:
    put:
      tags:
        - Transaction module
      summary: Ajouter ou modifier une note dans une transaction
      description: Ajoute une nouvelle note à une transaction existante ou modifie la note d'une transaction spécifique à l'aide de son `transactionId`.
      parameters:
        - in: path
          name: transactionId
          description: L'ID de la transaction à laquelle ajouter ou modifier une note.
          required: true
          type: string
        - in: body
          name: note
          description: La note à ajouter ou à modifier dans la transaction.
          required: true
          schema:
            type: object
            properties:
              note:
                type: string
                description: Note à ajouter ou à modifier dans la transaction
                example: "Note pour la transaction"
      produces:
        - application/json
      responses:
        "200":
          description: Note ajoutée ou modifiée avec succès
          schema:
            $ref: '#/definitions/Transaction'
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

    delete:
      tags:
      - Transaction module
      summary: Supprimer la note d'une transaction
      description: Supprime uniquement la **note** d'une transaction spécifique à l'aide de son `transactionId`, sans supprimer la transaction elle-même.
      parameters:
        - in: path
          name: transactionId
          description: L'ID de la transaction dont la note doit être supprimée.
          required: true
          type: string
      produces:
        - application/json
      responses:
        "204":
          description: Note supprimée avec succès
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Note not found
        "500":
          description: Internal Server Error
  /transactions/{transactionId}/category:
    put:
      tags:
        - Transaction module
      summary: Mettre à jour la catégorie d'une transaction
      description: Mettre à jour la catégorie d'une transaction spécifique
      parameters:
        - in: path
          name: transactionId
          description: L'ID de la transaction à laquelle ajouter ou modifier la catégorie.
          required: true
          type: string
        - in: body
          name: catégorie
          description: La catégorie à ajouter ou à modifier dans la transaction.
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
                example: "Shopping"
      produces:
        - application/json
      responses:
        "200":
          description: catégorie ajoutée ou modifiée avec succès
          schema:
            $ref: '#/definitions/Transaction'
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - Transaction module
      summary: Supprimer la catégorie d'une transaction
      description: Supprime uniquement la catégorie d'une transaction spécifique à l'aide de son `transactionId`, sans supprimer la transaction elle-même.
      parameters:
        - in: path
          name: transactionId
          description: L'ID de la transaction dont la catégorie doit être supprimée.
          required: true
          type: string
      produces:
        - application/json
      responses:
        "204":
          description: catégorie supprimée avec succès
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Note not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transaction:
    type: object
    description: transaction
    properties:
      id:
        type: string
        description: Id of the transaction
      date:
        type: string
        description: Date of the transaction
      amount:
        type: number
        description: Amount of the transaction
      description:
        type: string
        description: Description of the transaction
      category:
        type: string
        description: Category of the transaction
      notes:
        type: string
        description: Notes of the transaction